# Generated by Django 4.2.7 on 2023-12-18 22:26

import json
import os
from datetime import datetime
import random
from django.conf import settings
from django.db import migrations
from dotenv import load_dotenv

load_dotenv(override=True)


class Migration(migrations.Migration):

    # Creates 20 basic activities per category (Sports, Art, and Science)
    def custom_task(self, schema_editor):
        """
            Create 20 basic activities per category (Sports, Art, and Science)
            JSON schema:
            {
                "name": "Soccer",
                "description": "Team-based sport involving kicking a ball into the opponent's goal. Develops teamwork, coordination, and agility.",
                "category": "soccer-quest",
                "slugName": "soccer",
                "providerSlug": "playful-learning",
                "fromDate": "2024-01-01", => convert to date object
                "toDate": "2024-12-31", => convert to date object
                "startTime": "09:00", => convert to time object
                "endTime": "11:00", => convert to time object
                "weekday": "Saturday",
                "ageGroup": "10-15",
                "position": "Goalkeeper",
                "location": "Madrid, Spain",
                "price": 100,
                "pricePeriod": "day",
                "capacity": 20,
                "activityType": "Outdoors"
            }
        """
        to_create = json.loads(open(os.path.join(settings.BASE_DIR, 'activities', 'migrations', 'data', 'offers.json')).read())

        Activity = self.get_model('activities', 'Activity')
        Category = self.get_model('categories', 'Category')
        Provider = self.get_model('providers', 'Provider')

        image_prefix = f'https://{os.getenv('AWS_STORAGE_BUCKET_NAME')}.s3.amazonaws.com'
        print(image_prefix)
        
        random_urls = [
            'https://www.google.com',
            'https://www.youtube.com',
            'https://www.facebook.com',
            'https://www.twitter.com',
            'https://www.instagram.com',
            'https://www.linkedin.com',
            'https://www.pinterest.com',
            'https://www.tiktok.com',
            'https://www.snapchat.com',
            'https://www.reddit.com',
            'https://www.tumblr.com',
            'https://www.flickr.com',
            'https://www.whatsapp.com',
        ]
        
        for item in to_create:
            age_start, age_end = item['ageGroup'].split('-')
            Activity.objects.get_or_create(
                name=item['name'],
                description=item['description'],
                category=Category.objects.get(slug=item['category']),
                slug=item['slugName'],
                provider=Provider.objects.get(slug=item['providerSlug']),
                image=f'activities/{item['slugName']}.jpg',
                from_date=datetime.strptime(item['fromDate'], '%Y-%m-%d').date(),
                to_date=datetime.strptime(item['toDate'], '%Y-%m-%d').date(),
                start_time=datetime.strptime(item['startTime'], '%H:%M').time(),
                end_time=datetime.strptime(item['endTime'], '%H:%M').time(),
                weekday=item['weekday'],
                age_start=age_start,
                age_end=age_end,
                position=item['position'],
                location=item['location'],
                price=item['price'],
                price_period=item['pricePeriod'],
                capacity=item['capacity'],
                activity_type=item['activityType'],
                is_visually_adaptive=bool(random.getrandbits(1)),
                is_hearing_adaptive=bool(random.getrandbits(1)),
                is_mobility_adaptive=bool(random.getrandbits(1)),
                is_cognitive_adaptive=bool(random.getrandbits(1)),
                url=random.choice(random_urls),
                is_featured=random.choice([True, False, False, False, False]),
            )

    dependencies = [
        ('activities', '0001_initial'),
        ('categories', '0002_basic_categories'),
        ('providers', '0002_basic_providers'),
    ]

    operations = [
        migrations.RunPython(custom_task, migrations.RunPython.noop),
    ]
